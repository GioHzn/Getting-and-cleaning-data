1+1
example <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8), nrow = 4, ncol = 2)
View(example)
install.packages("ggplot2")
source("https://bioconductor.org/biocLite.R")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
library(devtools)
install.packages("devtools")
library(ggplot2)
library()
old.packages()
update.packages()
install.packages(c("glue", "magrittr", "rlang"))
version
sessioninfo()
sessionInfo()
help(package = "ggplot2")
browseVingettes("ggplot2")
browseVignettes("ggplot2")
?devtools
??devtools
dev_packages()
dev_help
install.packages("KernSmooth")
library(KernSmooth)
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x, mean)
x <- 1:4
lapply(x, runif)
runif(x[1])
runif(x[[1])
runif(x[[1]])
runif(x[[1]])
runif(x[[1]])
runif(x[[2]])
runif(x[[3]])
runif(x[[4]])
lapply(x, runif, min = -10, max = 10)
?runif
lapply(x, FUN(anonymousfun) anonymousfun[,1])
lapply(x, FUN(anonymousfun), anonymousfun[,1])
lapply(x, (anonymousfun) anonymousfun[,1])
lapply(x), (anonymousfun) anonymousfun[,1])
lapply(x, function(anonymousfun) anonymousfun[,1])
x <0 list( a= matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x <- list( a= matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
lapply(x, function(anonymousfun) anonymousfun[,1])
x <- list(a = 1:4, b= rnorm(10), c= rnorm(20,1), d= rnorm(100, 5))
x
lapply(x, mean)
sapply(x, mean)
str(apply)
x <- matrix(rnorm(200), 20, 10)
x
apply(x, 2, mean)
apply(x, 1, sum)
apply(x, 4, sum)
apply(x, 3, sum)
apply(x, 1, quantile, probs = c(0.25, 0.75))
a <- array(rnorm(2*2*10), c(2, 2, 10))
a
apply(a, c(1, 2), mean)
rowMeans(a, dims = 2)
list(rep(1, 4), rep(2, 3), rep(3, 2), rep(4, 1))
mapply(rep, 1:4, 4:1)
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise(5, 1, 2)
noise(1:5, 1:5, 2)
mapply(noise, 1:5, 1:5, 2)
x <- c(rnorm(10), runif(10), rnorm(10))
x
f <- gl(3, 10)
f
tapply(x, f, mean)
x <- c(rnorm(10), runif(10), rnorm(10))
x
f <- gl(3, 10)
f
split(x, f)
lapply(split(x, f), mean)
library(datasets)
head(airquility)
head(airquality)
s <- split(airquality, airquality$Month)
s
lapply(s, function(x), colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], rm.na = T))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind", na.rm = T)]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind") na.rm = T]))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")] na.rm = T))
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]), na.rm = T)
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = T))
head(airquality)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = T))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]) na.rm = T)
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]), na.rm = T)
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm=T))
x <- rnorm(10)
f1 <- gl(2, 5)
f2 <- gl(5, 2)
f1
f2
interaction(f1, f2)
str(split(x, list(f1, f2)))
split(x, list(f1, f2))
str(split(x, list(f1, f2), drop = T))
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals(lapply(flags, unique))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
version
version(rlang)
library(dplyr)
library(rlang)
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, "students", "sex", "count", -grade)
gather(students, "sex", "count", -grade)
gather(students, sex, count, -grade)
students2
res <- students2 %>% gather(sex_class, value, -grade)
res <- gather(students2, sex_class, value, -grade)
skip()
res
?separate
separate(res, sex_class, c("sex", "class"))
students2 %>%
gather(students2, sex_class, -grade) %>%
separate(sex_class, c("sex", "class")) %>%
print
students2 %>%
gather(sex_class, count, -grade) %>%
separate(sex_class, c("sex", "class")) %>%
print
submit()
skip()
students3
?gather
students3 %>%
gather(test, class, -name, na.rm = TRUE) %>%
print
students3 %>%
gather(test_class, grade, -name, na.rm = TRUE) %>%
print
skip()
?spread
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(class, grade ) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, c(midtern, final)) %>%
print
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
print
submit()
skip()
library(swirl)
swirl()
stop()
skip()
skip()
skip()
skip()
skip()
help()
?help
info
info()
?info
bye()
swirl()
type Sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "en_US.UTF-8")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19-20-12")
ymd("19/20/12")
ymd("1920/1/2")
dt1
dt1_parsed <- ymd_hms(dt1)
dt1 <- dt1_parsed
dt1_parsed
class(dt1_parsed)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz("Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
skip()
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
getwd()
setwd("G:/Coursera/Foundations_using_R_Specialization/Getting and cleaning data")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "housing.csv", method = "curl")
housing <- read.csv("housing.csv")
housing_names <- names(housing)
housing_names
strplit(housing_names, "wgtp")
strplit(housing_names, wgtp)
strsplit(housing_names, wgtp)
?strsplit
strsplit(housing_names, wgtp)
strsplit(housing_names, "wgtp")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv", method = "curl")
gdp <- read.csv("GD{.csv")
gdp <- read.csv("GDP.csv")
str(gpd)
str(gdp)
gdp$X.3
sum(sub(".", "", gdp$X.3),)
sum(sub(".", "", gdp$X.3))
sum(sub(",", "", gdp$X.3))
sum(sub(",", "", gdp$X.3),)
sum(gsub(",", "", gdp$X.3),)
sum(gsub(",", "", gdp$X.3))
?gsub
gsub(",", "", gdp$X.3)
sum(gsub(",", "", gdp$X.3))
nocom <- gsub(",", "", gdp$X.3)
sum(nocom[4:3016])
nocom <- as.numeric(nocom)
nocom
sum(nocom)
sum(nocom, na.rm = T)
mean(nocom, na.rm = T)
median(nocom, na.rm=T)
gdp
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
?grep
grepl(^2012)
grepl(^2012, sampleTimes)
grepl(2012, sampleTimes)
sum(grepl("2012", sampleTimes)
)
wday(sampleTimes)
sum(grepl(2, wday(sampleTimes)))
grepl(2, wday(sampleTimes))
grepl(2, wday(sampleTimes)) & grepl("2012", sampleTimes)
sum(grepl(2, wday(sampleTimes)) & grepl("2012", sampleTimes))
